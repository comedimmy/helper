using System.Drawing;
using System.Windows.Forms;
using System;

namespace rotate_11124235
{
    public partial class Form1 : Form
    {
        float angleEarth = 0;  // 地球的旋轉角度


        float deltaEarth = 1;  // 地球旋轉角度的遞增值
        Rectangle[] r = new Rectangle[4]; // 人物圖的 4張小圖的矩形區域

        Image sprite = Properties.Resources.sprite_sheet; // 人物圖

        int sprintIndex = 0;
        int mx, my;
        int x, y, dx, dy;

        private void Form1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyData == Keys.Up)
            {
                deltaEarth += 1;
            }
            else if (e.KeyData == Keys.Down)
            {
                deltaEarth -= 1;
                if (deltaEarth < 1) deltaEarth = 1;
            }


            if (e.KeyData == Keys.Space)
            {
                deltaEarth = 1;

            }
        }

        private void Form1_Paint(object sender, PaintEventArgs e)
        {

            ////////////////////////////////////////////////////////1
            e.Graphics.ResetTransform();
            e.Graphics.TranslateTransform(this.ClientSize.Width / 2, this.ClientSize.Height / 2); // 設定原點為紅色圓
            e.Graphics.RotateTransform(angleEarth+30); // 讓角色隨地球旋轉
            e.Graphics.TranslateTransform(300, 0); // 平移到軌道上
            e.Graphics.DrawImage(sprite, -80, -80, r[sprintIndex], GraphicsUnit.Pixel); // 以圖片中心繪製
            e.Graphics.ResetTransform();

            float angle2, angle3;

            e.Graphics.ResetTransform();
            angle2 = angleEarth + 90;
            angle2 %= 360;
            double xx = Math.Cos(angle2 * 3.14159 / 180) * 300 + this.ClientSize.Width / 2;
            double yy = Math.Sin(angle2 * 3.14159 / 180) * 300 + this.ClientSize.Height / 2;
            e.Graphics.DrawImage(sprite, (int)xx-80/2, (int)yy-80/2, r[sprintIndex], GraphicsUnit.Pixel);
            e.Graphics.ResetTransform();
            ////////////////////////////////////////////////////////2
            e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;
            // 繪出 太陽
            e.Graphics.TranslateTransform(this.ClientSize.Width / 2, this.ClientSize.Height / 2);
            e.Graphics.FillEllipse(Brushes.Crimson, -50, -50, 100, 100);
            ////////////////////////////////////////////////////////3
            e.Graphics.ResetTransform();
            angle2 = angleEarth + 150;
            angle2 %= 360;
            xx = Math.Cos(angle2 * 3.14159 / 180) * 300 + this.ClientSize.Width / 2;
            yy = Math.Sin(angle2 * 3.14159 / 180) * 300 + this.ClientSize.Height / 2;
            float ss = Convert.ToSingle(Math.Atan2(Convert.ToDouble(ClientSize.Height - yy), Convert.ToDouble(ClientSize.Width / 2 - xx)));
            angle3 = Convert.ToSingle(ss * 180.0 / 3.14);
            angle3 += 359;
            angle3 %= 360;
            e.Graphics.TranslateTransform(Convert.ToInt32(xx), Convert.ToInt32(yy));
            e.Graphics.RotateTransform(angle3);
            e.Graphics.DrawImage(sprite,  - 80 / 2,  - 80 / 2, r[sprintIndex], GraphicsUnit.Pixel);
            e.Graphics.ResetTransform();
            ////////////////////////////////////////////////////////4
            angle2 = angleEarth + 210;
            angle2 %= 360;
            xx = Math.Cos(angle2 * 3.14159 / 180) * 300 + this.ClientSize.Width / 2;
            yy = Math.Sin(angle2 * 3.14159 / 180) * 300 + this.ClientSize.Height / 2;


            ss = Convert.ToSingle(Math.Atan2(Convert.ToDouble(my - yy), Convert.ToDouble(mx - xx)));
            angle3 = Convert.ToSingle(ss * 180.0 / 3.14);
            angle3 += 359;
            angle3 %= 360;
            e.Graphics.TranslateTransform(Convert.ToInt32(xx), Convert.ToInt32(yy));
            e.Graphics.RotateTransform(angle3);
            e.Graphics.DrawImage(sprite, -80 / 2, -80 / 2, r[sprintIndex], GraphicsUnit.Pixel);
        }

        private void Form1_MouseClick(object sender, MouseEventArgs e)
        {
            mx = e.X;
            my = e.Y;
        }

        public Form1()
        {
            InitializeComponent();
            this.ClientSize = new Size(1000, 1000); // 視窗客戶區的寬高
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            angleEarth += deltaEarth; // 地球的旋轉角度 累進
            angleEarth %= 360;


            x += dx;
            y += dy;
            dy = dy + 1;
            this.Invalidate();
            sprintIndex++;
            sprintIndex %= 4;
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            for (int i = 0; i < 4; i++)
                r[i] = new Rectangle(i * 100,0, 80, 110);

        }
    }
}
