using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Drawing.Drawing2D;

namespace WindowsFormsApp2
{
    public partial class Form1 : Form
    {
        Bitmap bitmap = Properties.Resources.lofi;
        Point[] pArr = new Point[3];
        SolidBrush brush = new SolidBrush(Color.FromArgb(64, 255, 255, 0));
        int Dx = 2;
        float x1 = 450;
        float y1 = 600;
        Point[] pArr2 = new Point[3];
        int Dx2 = -3;
        int Dy = -2;
        float yy2 = 100, yy1 = 150;

        Point[] pArr3 = new Point[4];
        Point mp; //  moving point
        bool Selected = false;
        int dx, dy;
        SolidBrush brush3 = new SolidBrush(Color.FromArgb(64, 0, 0, 255));



        public Form1()
        {
            InitializeComponent();
            this.ClientSize = new Size(600, 600);

            mp = new Point(450, 600);
            pArr[0] = mp;
            pArr[1] = new Point(300 - 70, 0);
            pArr[2] = new Point(300 + 70, 0);


        }

        private void Form1_Paint(object sender, PaintEventArgs e)
        {
            e.Graphics.SmoothingMode = SmoothingMode.AntiAlias;

            e.Graphics.DrawImage(bitmap, 0, 0, 600, 600);

            pArr[0] = mp;
            GraphicsPath gp = new GraphicsPath();
            gp.AddPolygon(pArr);
            e.Graphics.FillPath(brush, gp);

            e.Graphics.FillEllipse(Brushes.Red, mp.X - 10, mp.Y - 10, 20, 20);

            x1 = mp.X;
            y1 = mp.Y;
            GraphicsPath gp3 = new GraphicsPath();

            pArr3[0] = new Point(pArr[1].X + (int)(yy2 / y1 * (x1 - pArr[1].X)), (int)yy2);
            pArr3[1] = new Point(pArr[2].X + (int)(yy2 / y1 * (x1 - pArr[2].X)), (int)yy2);
            pArr3[2] = new Point(pArr[2].X + (int)(yy1 / y1 * (x1 - pArr[2].X)), (int)yy1);
            pArr3[3] = new Point(pArr[1].X + (int)(yy1 / y1 * (x1 - pArr[1].X)), (int)yy1);

            gp3.AddPolygon(pArr3);

            brush3 = new SolidBrush(Color.FromArgb(128, 0,((int)yy2 * 255 / 600 + 10) % 256, 0));
            e.Graphics.FillPath(brush3, gp3);
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            if (pArr[1].X <= 0 || pArr[2].X >= 600) Dx = -Dx;
            pArr[1].X = pArr[1].X + Dx;
            pArr[2].X = pArr[2].X + Dx;

            yy2 = yy2 + Dy;
            if (((y1 - yy2) >= 50 && Dy < 0 && yy2 >= 0) || (yy2 >= 0 && Dy > 0))
                yy1 = yy2 + 50;
            if (yy1 > y1) yy1 = y1;
            if ((yy2 < 0 && Dy < 0) || (yy2 > y1 && Dy > 0)) Dy *= -1;

            if (pArr2[1].X <= 0 || pArr2[2].X >= 600) Dx2 = -Dx2;
            pArr2[1].X = pArr2[1].X + Dx2;
            pArr2[2].X = pArr2[2].X + Dx2;

            this.Invalidate();
        }

        private void Form1_MouseDown(object sender, MouseEventArgs e)
        {
            // mp vs e.Location
            double dis = Math.Sqrt((mp.X - e.X) * (mp.X - e.X) + (mp.Y - e.Y) * (mp.Y - e.Y));
            if (dis <= 10)
            {
                Selected = true;
                dx = e.X - mp.X;
                dy = e.Y - mp.Y;
            }


        }

        private void Form1_MouseUp(object sender, MouseEventArgs e)
        {
            Selected = false;

        }

        private void Form1_MouseMove(object sender, MouseEventArgs e)
        {
            if (Selected == true)
            {
                mp.X = e.X - dx;
                mp.Y = e.Y - dy;
                //this.Invalidate();
            }


        }
    }
}
